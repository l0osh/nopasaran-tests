{
    "id": "MAIN",
    "initial": "INIT",
    "states": {
      "INIT": {
        "on": {
          "STARTED": [
            {
              "target": "SETTING_UP_CONTROL_CHANNEL",
              "actions": []
            }
          ]
        }
      },
      "SETTING_UP_CONTROL_CHANNEL": {
        "entry": [
          {
            "type": "get_from_file (variables role) (role)"
          },
          {
            "type": "get_from_file (variables client) (client)"
          },
          {
            "type": "get_from_file (variables server) (server)"
          },
          {
            "type": "get_from_file (variables controller_conf_filename) (controller_conf_filename)"
          },
          {
            "type": "call (CONTROL_CHANNEL_SET_UP role controller_conf_filename) (event ctrl)"
          },
          {
            "type": "trigger (event)"
          }
        ],
        "on": {
          "CONTROL_CHANNEL_READY": [
            {
              "target": "BUILDING_HTTP1_REQUEST",
              "cond": "equal (role client)",
              "actions": [
                {
                  "type": "assign (role) (role)"
                },
                {
                  "type": "assign (ctrl) (ctrl)"
                }
              ]
            },
            {
              "target": "BUILDING_HTTP1_SERVER",
              "actions": [
                {
                  "type": "assign (ctrl) (ctrl)"
                }
              ]
            }
          ]
        }
      },
      "BUILDING_HTTP1_REQUEST": {
        "entry": [
          {
            "type": "set (0.2) (waiting_time)"
          },
          {
            "type": "wait (waiting_time)"
          },
          {
            "type": "call (HTTPS1_REQUEST_BUILD) (event request)"
          },
          {
            "type": "trigger (event)"
          }
        ],
        "on": {
          "REQUEST_BUILT": [
            {
              "target": "SENDING_REQUEST",
              "actions": [
                {
                  "type": "assign (request) (request)"
                },
                {
                  "type": "assign (ctrl) (ctrl)"
                }
              ]
            }
          ]
        }
      },
      "BUILDING_HTTP1_SERVER": {
        "entry": [
          {
            "type": "call (HTTPS1_SERVER_BUILD) (event server)"
          },
          {
            "type": "trigger (event)"
          }
        ],
        "on": {
          "RESPONSE_BUILT": [
            {
              "target": "WAITING_FOR_REQUEST",
              "actions": [
                {
                  "type": "assign (server) (server)"
                },
                {
                  "type": "assign (ctrl) (ctrl)"
                }
              ]
            }
          ]
        }
      },
      "SENDING_REQUEST": {
        "entry": [
          {
            "type": "get_from_file (variables ip) (ip)"
          },
          {
            "type": "get_from_file (variables port) (port)"
          },
          {
            "type": "get_from_file (variables domain) (domain)"
          },
          {
            "type": "make_https_1_sni_request (request ip port domain) (response)"
          },
          {
            "type": "done"
          }
        ],
        "on": {
          "DONE": [
            {
              "target": "EXCHANGING_SYNC",
              "actions": [
                {
                  "type": "assign (response) (received)"
                },
                {
                  "type": "assign (ctrl) (ctrl)"
                }
              ]
            }
          ]
        }
      },
      "WAITING_FOR_REQUEST": {
        "entry": [
          {
            "type": "get_from_file (variables port) (port)"
          },
          {
            "type": "set (3) (timeout)"
          },
          {
            "type": "wait_for_https_1_request (server port timeout) (request)"
          },
          {
            "type": "done"
          }
        ],
        "on": {
          "DONE": [
            {
              "target": "EXCHANGING_SYNC",
              "actions": [
                {
                  "type": "assign (request) (received)"
                },
                {
                  "type": "assign (ctrl) (ctrl)"
                }
              ]
            }
          ]
        }
      },
      "EXCHANGING_SYNC": {
        "entry": [
          {
            "type": "call (EXCHANGE_SYNC ctrl received) (event sync_dict)"
          },
          {
            "type": "set (ready_stop) (signal_type)"
          },
          {
            "type": "call (SERVER_SIGNALING signal_type) (signaling-event)"
          }
        ]
      }
    }
  }